package Trees;

public class BinaryTreeAlgos {
	public static void main(String[] args) {
		int[] in = {'D', 'B', 'E', 'A', 'F', 'C'};
	}
	
	static int preIndex = 0 ;
	public static Node buildTreefromTraversals(int[] in, int[] pre, int start, int end){
		if(start > end)
			return null;
		
		Node node = new Node(pre[preIndex++]);
		if(start == end)
			return node ;
		
		int inIndex = searchInInorder(in, start, end, node.getKey());
		node.setLeft(buildTreefromTraversals(in, pre, start, inIndex - 1));
		node.setRight(buildTreefromTraversals(in, pre, inIndex + 1, end));
		
		return node; 
	}
	private static int searchInInorder(int[] in, int start, int end, int key) {
		for(int i = start ; i <= end ; i++){
			if(in[i] == key)
				return i ;
		}
		
		return -1;
	}
}
